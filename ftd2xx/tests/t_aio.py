# This file was originally generated by PyScripter's unitest wizard

import asyncio
import unittest

from .. import aio


class TestAIOFTD2XX(unittest.IsolatedAsyncioTestCase):
    def setUp(self):
        self.device = aio.open()

    def tearDown(self):
        self.device.close()

    async def testread(self):
        self.device.setTimeouts(1000, 0)
        result = await self.device.read(1)
        self.assertIsInstance(result, bytes)

    async def testreadtimeout(self):
        self.device.setTimeouts(1, 0)

        for _ in range(100):
            try:
                await self.device.read(1, exc=True)
                self.device.purge()
                continue
            except Exception as e:
                self.assertIsInstance(e, asyncio.TimeoutError)
                return
        raise Exception("Could not timeout!")


# if __name__ == "__main__":
#     unittest.main()
